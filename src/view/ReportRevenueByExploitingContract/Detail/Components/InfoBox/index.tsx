
import { Col, Descriptions, Row } from 'antd';
import React, { useEffect, useState } from 'react';
import BusinessContractEntity from '@modules/businessContract/entity';

import './styles.scss';
import { businessContractTranslateKey } from '@view/shared/translateKey';
import { useTranslate } from '@view/shared/hook/useTranslate';
import { formatNumberDec } from '@view/shared/helper/functions';
import moment from 'moment';
interface Props {
  //   data: Array<{
  //     label: string;
  //     content: string;
  //   }>;
  data: BusinessContractEntity;
  title: string;
  layout?: 'horizontal' | 'vertical';
}

const InfoBox = (props: Props) => {
  const [infoContract, setInfoContract] = useState([]);
  const {
    CONTRACT_CODE,
    VALUE_PER_DAY,
    VALUE_PER_SONG,
    COLUMN_VALUE_PER_SONG,
    THIS_CONTRACT_TYPE,
    START_DAY,
    END_DAY,
    ALL_ONE,
    CONTRACT_VALUE,
    AUTHORITY_NAME,
  } = useTranslate("businessContractTranslateKey");
  useEffect(() => {
    if (props.data) {
      const res: BusinessContractEntity = props.data;
      let constractValueByday = formatNumberDec(
        res.businessContractValue + '',
        '.',
        ',',
      );
      if (res.businessContractType === 1) {
        const momentStart = moment(res.businessContractStart);
        const momentEnd = moment(res.businessContractEnd);
        const dayDiff =
          moment.duration(momentEnd.diff(momentStart)).as('d') || 0;
        constractValueByday = formatNumberDec(
          Math.floor(res.businessContractValue / dayDiff) + '',
          '.',
          ',',
        );
      }
      const __infoContract = [
        {
          label: CONTRACT_CODE,
          content: res.businessContractCode,
        },
        {
          label: AUTHORITY_NAME,
          content: res.businessCustomer?.businessCustomerName,
        },
        {
          label: THIS_CONTRACT_TYPE,
          content:
            res.businessContractType == 0 ? COLUMN_VALUE_PER_SONG : ALL_ONE,
        },
        {
          label: START_DAY,
          content: moment(res.businessContractStart).format('DD/MM/YYYY'),
        },
        {
          label: END_DAY,
          content: moment(res.businessContractEnd).format('DD/MM/YYYY'),
        },
        {
          label: CONTRACT_VALUE,
          content:
            formatNumberDec(
              Math.floor(res.businessContractValue) + '',
              '.',
              ',',
            ) + ' VND',
        },
        {
          label:
            res.businessContractType === 0 ? VALUE_PER_SONG : VALUE_PER_DAY,
          content: constractValueByday + ' VND',
        },
      ];
      setInfoContract(__infoContract);
    }
  }, [props.data]);
  return (
    <div className="infoBox">
      <div className="title-box">{props.title}</div>
      {infoContract?.map((item) => {
        return (
          <Row className="content-row">
            <Col span={12}>
              {' '}
              <p>{item.label}</p>
            </Col>
            <p className="custom-content">{item.content}</p>
          </Row>
        );
      })}
    </div>
  );
};

export default InfoBox;
